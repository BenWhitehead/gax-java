/*
 * Copyright 2015, Google Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/logging.proto

package com.google.api;

public interface LoggingOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.api.Logging)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .google.api.Logging.LoggingDestination producer_destinations = 1;</code>
   *
   * <pre>
   * Logging configurations for sending logs to the producer project.
   * There can be multiple producer destinations, each one must have a
   * different monitored resource type. A log can be used in at most
   * one producer destination.
   * </pre>
   */
  java.util.List<com.google.api.Logging.LoggingDestination> 
      getProducerDestinationsList();
  /**
   * <code>repeated .google.api.Logging.LoggingDestination producer_destinations = 1;</code>
   *
   * <pre>
   * Logging configurations for sending logs to the producer project.
   * There can be multiple producer destinations, each one must have a
   * different monitored resource type. A log can be used in at most
   * one producer destination.
   * </pre>
   */
  com.google.api.Logging.LoggingDestination getProducerDestinations(int index);
  /**
   * <code>repeated .google.api.Logging.LoggingDestination producer_destinations = 1;</code>
   *
   * <pre>
   * Logging configurations for sending logs to the producer project.
   * There can be multiple producer destinations, each one must have a
   * different monitored resource type. A log can be used in at most
   * one producer destination.
   * </pre>
   */
  int getProducerDestinationsCount();
  /**
   * <code>repeated .google.api.Logging.LoggingDestination producer_destinations = 1;</code>
   *
   * <pre>
   * Logging configurations for sending logs to the producer project.
   * There can be multiple producer destinations, each one must have a
   * different monitored resource type. A log can be used in at most
   * one producer destination.
   * </pre>
   */
  java.util.List<? extends com.google.api.Logging.LoggingDestinationOrBuilder> 
      getProducerDestinationsOrBuilderList();
  /**
   * <code>repeated .google.api.Logging.LoggingDestination producer_destinations = 1;</code>
   *
   * <pre>
   * Logging configurations for sending logs to the producer project.
   * There can be multiple producer destinations, each one must have a
   * different monitored resource type. A log can be used in at most
   * one producer destination.
   * </pre>
   */
  com.google.api.Logging.LoggingDestinationOrBuilder getProducerDestinationsOrBuilder(
      int index);

  /**
   * <code>repeated .google.api.Logging.LoggingDestination consumer_destinations = 2;</code>
   *
   * <pre>
   * Logging configurations for sending logs to the consumer project.
   * There can be multiple consumer destinations, each one must have a
   * different monitored resource type. A log can be used in at most
   * one consumer destination.
   * </pre>
   */
  java.util.List<com.google.api.Logging.LoggingDestination> 
      getConsumerDestinationsList();
  /**
   * <code>repeated .google.api.Logging.LoggingDestination consumer_destinations = 2;</code>
   *
   * <pre>
   * Logging configurations for sending logs to the consumer project.
   * There can be multiple consumer destinations, each one must have a
   * different monitored resource type. A log can be used in at most
   * one consumer destination.
   * </pre>
   */
  com.google.api.Logging.LoggingDestination getConsumerDestinations(int index);
  /**
   * <code>repeated .google.api.Logging.LoggingDestination consumer_destinations = 2;</code>
   *
   * <pre>
   * Logging configurations for sending logs to the consumer project.
   * There can be multiple consumer destinations, each one must have a
   * different monitored resource type. A log can be used in at most
   * one consumer destination.
   * </pre>
   */
  int getConsumerDestinationsCount();
  /**
   * <code>repeated .google.api.Logging.LoggingDestination consumer_destinations = 2;</code>
   *
   * <pre>
   * Logging configurations for sending logs to the consumer project.
   * There can be multiple consumer destinations, each one must have a
   * different monitored resource type. A log can be used in at most
   * one consumer destination.
   * </pre>
   */
  java.util.List<? extends com.google.api.Logging.LoggingDestinationOrBuilder> 
      getConsumerDestinationsOrBuilderList();
  /**
   * <code>repeated .google.api.Logging.LoggingDestination consumer_destinations = 2;</code>
   *
   * <pre>
   * Logging configurations for sending logs to the consumer project.
   * There can be multiple consumer destinations, each one must have a
   * different monitored resource type. A log can be used in at most
   * one consumer destination.
   * </pre>
   */
  com.google.api.Logging.LoggingDestinationOrBuilder getConsumerDestinationsOrBuilder(
      int index);
}
