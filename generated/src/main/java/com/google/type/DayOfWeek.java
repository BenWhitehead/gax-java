/*
 * Copyright 2015, Google Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/type/dayofweek.proto

package com.google.type;

/**
 * Protobuf enum {@code google.type.DayOfWeek}
 *
 * <pre>
 * Represents a day of week.
 * </pre>
 */
public enum DayOfWeek
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>DAY_OF_WEEK_UNSPECIFIED = 0;</code>
   *
   * <pre>
   * The unspecified day-of-week.
   * </pre>
   */
  DAY_OF_WEEK_UNSPECIFIED(0, 0),
  /**
   * <code>MONDAY = 1;</code>
   *
   * <pre>
   * The day-of-week of Monday.
   * </pre>
   */
  MONDAY(1, 1),
  /**
   * <code>TUESDAY = 2;</code>
   *
   * <pre>
   * The day-of-week of Tuesday.
   * </pre>
   */
  TUESDAY(2, 2),
  /**
   * <code>WEDNESDAY = 3;</code>
   *
   * <pre>
   * The day-of-week of Wednesday.
   * </pre>
   */
  WEDNESDAY(3, 3),
  /**
   * <code>THURSDAY = 4;</code>
   *
   * <pre>
   * The day-of-week of Thursday.
   * </pre>
   */
  THURSDAY(4, 4),
  /**
   * <code>FRIDAY = 5;</code>
   *
   * <pre>
   * The day-of-week of Friday.
   * </pre>
   */
  FRIDAY(5, 5),
  /**
   * <code>SATURDAY = 6;</code>
   *
   * <pre>
   * The day-of-week of Saturday.
   * </pre>
   */
  SATURDAY(6, 6),
  /**
   * <code>SUNDAY = 7;</code>
   *
   * <pre>
   * The day-of-week of Sunday.
   * </pre>
   */
  SUNDAY(7, 7),
  UNRECOGNIZED(-1, -1),
  ;

  /**
   * <code>DAY_OF_WEEK_UNSPECIFIED = 0;</code>
   *
   * <pre>
   * The unspecified day-of-week.
   * </pre>
   */
  public static final int DAY_OF_WEEK_UNSPECIFIED_VALUE = 0;
  /**
   * <code>MONDAY = 1;</code>
   *
   * <pre>
   * The day-of-week of Monday.
   * </pre>
   */
  public static final int MONDAY_VALUE = 1;
  /**
   * <code>TUESDAY = 2;</code>
   *
   * <pre>
   * The day-of-week of Tuesday.
   * </pre>
   */
  public static final int TUESDAY_VALUE = 2;
  /**
   * <code>WEDNESDAY = 3;</code>
   *
   * <pre>
   * The day-of-week of Wednesday.
   * </pre>
   */
  public static final int WEDNESDAY_VALUE = 3;
  /**
   * <code>THURSDAY = 4;</code>
   *
   * <pre>
   * The day-of-week of Thursday.
   * </pre>
   */
  public static final int THURSDAY_VALUE = 4;
  /**
   * <code>FRIDAY = 5;</code>
   *
   * <pre>
   * The day-of-week of Friday.
   * </pre>
   */
  public static final int FRIDAY_VALUE = 5;
  /**
   * <code>SATURDAY = 6;</code>
   *
   * <pre>
   * The day-of-week of Saturday.
   * </pre>
   */
  public static final int SATURDAY_VALUE = 6;
  /**
   * <code>SUNDAY = 7;</code>
   *
   * <pre>
   * The day-of-week of Sunday.
   * </pre>
   */
  public static final int SUNDAY_VALUE = 7;


  public final int getNumber() {
    if (index == -1) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  public static DayOfWeek valueOf(int value) {
    switch (value) {
      case 0: return DAY_OF_WEEK_UNSPECIFIED;
      case 1: return MONDAY;
      case 2: return TUESDAY;
      case 3: return WEDNESDAY;
      case 4: return THURSDAY;
      case 5: return FRIDAY;
      case 6: return SATURDAY;
      case 7: return SUNDAY;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<DayOfWeek>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      DayOfWeek> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DayOfWeek>() {
          public DayOfWeek findValueByNumber(int number) {
            return DayOfWeek.valueOf(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(index);
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.type.DayOfWeekProto.getDescriptor()
        .getEnumTypes().get(0);
  }

  private static final DayOfWeek[] VALUES = values();

  public static DayOfWeek valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int index;
  private final int value;

  private DayOfWeek(int index, int value) {
    this.index = index;
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.type.DayOfWeek)
}

